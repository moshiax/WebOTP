name: Build and Release webotp.html

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'
      - 'README.md'
  workflow_dispatch:

jobs:
  build_release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install beautifulsoup4

      - name: Get commit info
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          COMMIT_SUMMARY=$(git log -1 --pretty=%s)
          COMMIT_BODY=$(git log -1 --pretty=%b | tr '\n' ' ' | tr -s ' ')
          echo "COMMIT_SUMMARY=$COMMIT_SUMMARY" >> $GITHUB_ENV
          echo "COMMIT_BODY=$COMMIT_BODY" >> $GITHUB_ENV

      - name: Build webotp.html
        run: python build.py

      - name: Clear releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASES_JSON=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases?per_page=100")

          RELEASES=$(echo "$RELEASES_JSON" | jq -r '. | sort_by(.created_at) | reverse | .[] | "\(.id) \(.tag_name)"')

          COUNT=0
          for line in $RELEASES; do
            COUNT=$((COUNT + 1))
            if [ $COUNT -le 3 ]; then
              continue
            fi
            RELEASE_ID=$(echo $line | cut -d' ' -f1)
            TAG_NAME=$(echo $line | cut -d' ' -f2)
            echo "Deleting release $TAG_NAME (id $RELEASE_ID) and tag $TAG_NAME"

            curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/$RELEASE_ID"

            curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/git/refs/tags/$TAG_NAME"
          done

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.SHORT_SHA }}
          name: "Release ${{ env.SHORT_SHA }} - ${{ env.COMMIT_SUMMARY }}"
          body: ${{ env.COMMIT_BODY != '' && env.COMMIT_BODY || env.COMMIT_SUMMARY }}
          draft: false
          prerelease: false
          artifacts: webotp.html
          generateReleaseNotes: true
          makeLatest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}